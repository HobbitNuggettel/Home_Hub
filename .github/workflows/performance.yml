name: ⚡ Performance Monitoring

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run performance tests weekly on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'
  workflow_dispatch:
    inputs:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual performance check'

jobs:
  bundle-analysis:
    name: 📦 Bundle Size Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🏗️ Build application
      run: CI=false npm run build
      env:
        CI: false
      
    - name: 📊 Analyze bundle size
      run: |
        echo "📦 Bundle Size Analysis"
        
        # Find main JS bundle
        MAIN_JS=$(find build/static/js -name "main.*.js" -type f | head -1)
        
        if [ -f "$MAIN_JS" ]; then
          # Get file size (cross-platform)
          if command -v stat >/dev/null 2>&1; then
            SIZE=$(stat -f%z "$MAIN_JS" 2>/dev/null || stat -c%s "$MAIN_JS" 2>/dev/null || echo "0")
          else
            SIZE=$(wc -c < "$MAIN_JS")
          fi
          
          SIZE_KB=$((SIZE / 1024))
          echo "Main bundle size: ${SIZE_KB}KB"
          
          # Create report
          echo "# 📦 Bundle Size Report" > bundle-report.md
          echo "Generated on: $(date)" >> bundle-report.md
          echo "" >> bundle-report.md
          echo "## 📊 Main Bundle" >> bundle-report.md
          echo "- Size: ${SIZE_KB}KB" >> bundle-report.md
          
          if [ $SIZE_KB -gt 500 ]; then
            echo "- Status: ⚠️ **Large** (>500KB)" >> bundle-report.md
          elif [ $SIZE_KB -gt 250 ]; then
            echo "- Status: 📊 **Medium** (250-500KB)" >> bundle-report.md
          else
            echo "- Status: ✅ **Good** (<250KB)" >> bundle-report.md
          fi
        else
          echo "⚠️ Main bundle not found"
          echo "# 📦 Bundle Size Report" > bundle-report.md
          echo "⚠️ Could not find main bundle" >> bundle-report.md
        fi
        
        echo "" >> bundle-report.md
        echo "## 📁 All Static Assets" >> bundle-report.md
        find build/static -type f \( -name "*.js" -o -name "*.css" \) 2>/dev/null | while read file; do
          if command -v stat >/dev/null 2>&1; then
            SIZE=$(stat -f%z "$file" 2>/dev/null || stat -c%s "$file" 2>/dev/null || wc -c < "$file")
          else
            SIZE=$(wc -c < "$file")
          fi
          SIZE_KB=$((SIZE / 1024))
          echo "- $(basename "$file"): ${SIZE_KB}KB" >> bundle-report.md
        done || echo "- No static assets found" >> bundle-report.md
        
        cat bundle-report.md
        
    - name: 📤 Upload bundle analysis
      uses: actions/upload-artifact@v4
      with:
        name: bundle-analysis
        path: bundle-report.md
        retention-days: 30

  build-performance:
    name: 🚀 Build Performance
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: ⚡ Measure build time
      run: |
        echo "⏱️ Starting build performance test..."
        
        START_TIME=$(date +%s)
        CI=false npm run build
        END_TIME=$(date +%s)
        
        BUILD_TIME=$((END_TIME - START_TIME))
        
        echo "# ⚡ Build Performance Report" > build-performance.md
        echo "Generated on: $(date)" >> build-performance.md
        echo "" >> build-performance.md
        echo "## ⏱️ Build Time" >> build-performance.md
        echo "- Total time: ${BUILD_TIME} seconds" >> build-performance.md
        
        if [ $BUILD_TIME -gt 120 ]; then
          echo "- Status: ⚠️ **Slow** (>2 minutes)" >> build-performance.md
        elif [ $BUILD_TIME -gt 60 ]; then
          echo "- Status: 📊 **Normal** (1-2 minutes)" >> build-performance.md
        else
          echo "- Status: ✅ **Fast** (<1 minute)" >> build-performance.md
        fi
        
        cat build-performance.md
        
    - name: 📤 Upload performance report
      uses: actions/upload-artifact@v4
      with:
        name: build-performance
        path: build-performance.md
        retention-days: 30

  performance-summary:
    name: 📊 Performance Summary
    runs-on: ubuntu-latest
    needs: [bundle-analysis, build-performance]
    if: always()
    
    steps:
    - name: 📊 Generate summary
      run: |
        echo "## ⚡ Performance Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- 📦 Bundle Analysis: ${{ needs.bundle-analysis.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- 🚀 Build Performance: ${{ needs.build-performance.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ Performance monitoring completed!" >> $GITHUB_STEP_SUMMARY