name: 🔒 Security Scan

on:
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  security-scan:
    name: 🔍 Security Analysis
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔒 Run npm audit
      run: |
        echo "🔍 Running npm security audit..."
        npm audit --audit-level moderate --json > audit-results.json || true
        
    - name: 📊 Parse audit results
      run: |
        if [ -f audit-results.json ]; then
          VULNERABILITIES=$(cat audit-results.json | jq '.metadata.vulnerabilities | to_entries | map(select(.value > 0)) | length')
          if [ "$VULNERABILITIES" -gt 0 ]; then
            echo "⚠️ Found $VULNERABILITIES types of vulnerabilities"
            cat audit-results.json | jq '.vulnerabilities'
          else
            echo "✅ No vulnerabilities found"
          fi
        fi
        
    - name: 🔍 CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        
    - name: 🏗️ Autobuild
      uses: github/codeql-action/autobuild@v3
      
    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      
    - name: 🔒 Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high
      continue-on-error: true
      
    - name: 📤 Upload Snyk results to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: snyk.sarif
      continue-on-error: true
      
    - name: 🔍 Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  dependency-check:
    name: 📦 Dependency Analysis
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 📦 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Check for outdated dependencies
      run: |
        echo "📊 Checking for outdated dependencies..."
        npm outdated --json > outdated.json || true
        
    - name: 📊 Generate dependency report
      run: |
        echo "📋 Dependency Report" > dependency-report.md
        echo "===================" >> dependency-report.md
        echo "" >> dependency-report.md
        
        if [ -f outdated.json ] && [ -s outdated.json ]; then
          echo "⚠️ Outdated Dependencies:" >> dependency-report.md
          cat outdated.json | jq -r 'to_entries[] | "- \(.key): \(.value.current) → \(.value.latest)"' >> dependency-report.md
        else
          echo "✅ All dependencies are up to date!" >> dependency-report.md
        fi
        
        echo "" >> dependency-report.md
        echo "📊 Total Dependencies:" >> dependency-report.md
        echo "- Production: $(cat package.json | jq '.dependencies | length')" >> dependency-report.md
        echo "- Development: $(cat package.json | jq '.devDependencies | length')" >> dependency-report.md
        
        cat dependency-report.md
        
    - name: 📤 Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-report
        path: dependency-report.md
        retention-days: 30